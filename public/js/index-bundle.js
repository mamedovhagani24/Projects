!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=5)}([function(t,e,n){},function(t,e){window.addEventListener("scroll",(function(){var t=document.querySelector(".header");window.pageYOffset>200&&!t.classList.contains("header-mobile_open")?t.classList.add("header__small"):t.classList.remove("header__small")}));document.querySelector(".burger").addEventListener("click",(function(t){var e=document.querySelector(".header");t.preventDefault(),this.classList.toggle("active"),e.classList.toggle("header-mobile_open")}));function n(t){t.target.classList.contains("nav__submenu")&&this.classList.toggle("submenu_active")}document.querySelectorAll(".submenu").forEach((function(t){t.addEventListener("click",n)}))},function(t,e){function n(t){var e=t.target,n=e.parentNode,i=null===document.elementFromPoint(t.clientX,t.clientY)?e:document.elementFromPoint(t.clientX,t.clientY);n===i.parentNode&&(i=i!==e.nextSibling?i:i.nextSibling,n.insertBefore(e,i))}document.querySelectorAll(".services__items-wrapper").forEach((function(t){!function(t){t.querySelectorAll(".services__item").forEach((function(t){!function(t){t.setAttribute("draggable",!0),t.addEventListener("dragend",n)}(t)}))}(t)}))},,,function(t,e,n){"use strict";n.r(e);n(0),n(1);function i(t){return function(t){if(Array.isArray(t))return o(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return o(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function c(t,e,n){return e&&s(t.prototype,e),n&&s(t,n),t}var a=function(){function t(e){var n,i,o,s=this;r(this,t),o=null,(i="_startElementMovePosition")in(n=this)?Object.defineProperty(n,i,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[i]=o,this.slideTime=e.slideTime,this.sliderDom=new l(e),this.touch=new d(e.container),this.adaptive=new u({onResizeCallback:function(){s.activeTransition(!1),s.updateElementsInfo(),s.setSlide(s.activeSlide),setTimeout((function(){s.activeTransition(!0)}),10)}}),this.elements={},this.activeSlide=0,this.maxSlide=null,this.elementWidth=null}return c(t,[{key:"init",value:function(){this.sliderDom.init(),this.adaptive.init(),this.updateElementsInfo(),this.activeTransition(!0),this.touch.initTouchEvents({touchStart:this.touchStart.bind(this),touchMove:this.touchMove.bind(this),touchEnd:this.touchEnd.bind(this)}),this.elementWidth=this.containerWidth,this.maxSlide=this.elements.length-1}},{key:"touchStart",value:function(){this.activeTransition(!1)}},{key:"touchMove",value:function(t){var e,n=t.moveX;this._startElementMovePosition=null!==(e=this._startElementMovePosition)&&void 0!==e?e:this.sliderDom.cotainerPosition;var i=this._startElementMovePosition+n;this.sliderDom.moveElements(i)}},{key:"touchEnd",value:function(){this._startElementMovePosition=null,this.activeTransition(!0),this.setSlide(this.nextSlideIndexByPosition)}},{key:"updateElementsInfo",value:function(){this.elements=this.sliderDom.getStaticElementsPosition()}},{key:"next",value:function(){this.setSlide(++this.activeSlide)}},{key:"prev",value:function(){this.setSlide(--this.activeSlide)}},{key:"activeTransition",value:function(t){this.sliderDom.container.style.transition=t?"transform ".concat(this.slideTime,"s ease"):"none"}},{key:"setSlide",value:function(t){t!==this.activeSlide&&this.activeTransition(!0),t=t<0?0:t>this.maxSlide?this.maxSlide:t;var e=this.elements[t].position;this.activeSlide=t,this.sliderDom.moveElements(-e)}},{key:"nextSlideIndexByPosition",get:function(){var t=this,e=this.sliderDom.getComputedElementsPosition().findIndex((function(e){return e.position+t.elementWidth/2>0}));return e>=0?e:this.maxSlide}},{key:"containerWidth",get:function(){return this.sliderDom.container.offsetWidth}}]),t}(),l=function(){function t(e){var n=e.container,i=e.slidesClass;r(this,t),this.container=n,this.slidesClass=i,this.elements=[]}return c(t,[{key:"init",value:function(){this.elements=this.container.querySelectorAll(this.slidesClass)}},{key:"getStaticElementsPosition",value:function(){return i(this.elements).map((function(t){return{position:t.offsetLeft}}))}},{key:"getComputedElementsPosition",value:function(){return i(this.elements).map((function(t){return{position:t.getBoundingClientRect().left}}))}},{key:"moveElements",value:function(t){this.container.style.transform="translateX(".concat(t,"px)")}},{key:"cotainerPosition",get:function(){var t=window.getComputedStyle(this.container).transform;return new WebKitCSSMatrix(t).m41}}]),t}(),u=function(){function t(e){var n=e.onResizeCallback;r(this,t),this.callbacks=[],this.windowResizedWidth=0,this.onResizeCallback=n}return c(t,[{key:"init",value:function(){window.addEventListener("resize",this.initResize.bind(this))}},{key:"initResize",value:function(t){this.onResizeCallback(),this.callbacks.forEach((function(e){return e(t)}))}},{key:"onResize",value:function(t){this.callbacks.push(t)}}]),t}(),d=function(){function t(e){r(this,t),this.container=e,this.touch={startX:0,moveX:0},this.events={}}return c(t,[{key:"initTouchEvents",value:function(t){this.container.addEventListener("touchstart",this._touchStart.bind(this)),this.container.addEventListener("touchmove",this._touchMove.bind(this)),this.container.addEventListener("touchend",this._touchEnd.bind(this)),this.events=t}},{key:"_touchStart",value:function(t){this.touch.startX=t.changedTouches[0].pageX,this.events.touchStart&&this.events.touchStart(this.touch)}},{key:"_touchMove",value:function(t){this.touch.moveX=t.changedTouches[0].pageX-this.touch.startX,Math.abs(this.touch.moveX)<20||this.events.touchMove&&this.events.touchMove(this.touch)}},{key:"_touchEnd",value:function(){this.touch={startX:0,moveX:0},this.events.touchEnd&&this.events.touchEnd()}}]),t}(),f=document.getElementById("carousel"),h=document.querySelectorAll(".slider__btn"),m=document.querySelectorAll(".slider__control-item"),v=new a({container:f,slidesClass:".carousel__slide",slideTime:.5});function p(t){m.forEach((function(t){return t.classList.remove("slider__control-item_active")})),m[t].classList.add("slider__control-item_active")}function y(){h[0].disabled=0===v.activeSlide,h[1].disabled=v.activeSlide===v.elements.length-1}v.init(),h.forEach((function(t){var e=t.id.split("__")[1];t.addEventListener("click",(function(){v[e](),p(v.activeSlide),y()}))})),y(),m.forEach((function(t){t.addEventListener("click",(function(e){var n=+t.dataset.index;v.setSlide(n),p(n),y()}))}));n(2);function b(t){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function S(t){return function(t){if(Array.isArray(t))return g(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return g(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return g(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function g(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}function E(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function _(t,e,n){return(_="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=x(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function O(t,e){return(O=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function k(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,i=x(t);if(e){var o=x(this).constructor;n=Reflect.construct(i,arguments,o)}else n=i.apply(this,arguments);return w(this,n)}}function w(t,e){return!e||"object"!==b(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function x(t){return(x=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var P=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&O(t,e)}(r,t);var e,n,i,o=k(r);function r(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r),(e=o.call(this,t)).slidesOnScreen=t.slidesOnScreen,e}return e=r,(n=[{key:"init",value:function(){_(x(r.prototype),"init",this).call(this),this.maxSlide=this.elements.length-this.slidesOnScreen,this.elementWidth=this.containerWidth/this.slidesOnScreen+10/this.slidesOnScreen}},{key:"updateElementsInfo",value:function(){_(x(r.prototype),"updateElementsInfo",this).call(this),this.elementWidth=this.containerWidth/this.slidesOnScreen+10/this.slidesOnScreen,this.updateElementsOnScreen(),_(x(r.prototype),"updateElementsInfo",this).call(this),this.maxSlide=this.elements.length-this.slidesOnScreen}},{key:"updateElementsOnScreen",value:function(){var t=this;S(this.sliderDom.elements).map((function(e){e.style.width=t.elementWidth+"px"}))}}])&&E(e.prototype,n),i&&E(e,i),r}(a),j=document.getElementById("carousel-multi"),T=document.querySelectorAll(".about-us__nav-btn"),A=document.getElementById("slider-range"),L=new P({container:j,slidesClass:".carousel_multi__slide",slideTime:.5,slidesOnScreen:6});function M(){L.containerWidth<1e3&&(L.slidesOnScreen=4),L.containerWidth<700?L.slidesOnScreen=2:L.slidesOnScreen=6}function I(){T[0].disabled=0===L.activeSlide,T[1].disabled=L.activeSlide===L.maxSlide}M(),L.init(),A.setAttribute("min","0"),A.setAttribute("max",L.elements[L.maxSlide].position),A.addEventListener("input",(function(){var t=+this.value;L.activeTransition(!1),L.sliderDom.moveElements(-t)})),A.addEventListener("change",(function(){var t=L.nextSlideIndexByPosition;L.activeTransition(!0),L.setSlide(t)})),T.forEach((function(t){t.addEventListener("click",(function(){var e=t.id.split("__")[1];L[e](),I()}))})),L.adaptive.onResize(M),I();n.p,n.p,n.p,n.p,n.p,n.p,n.p}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,